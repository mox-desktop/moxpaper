{
  config,
  lib,
  pkgs,
  ...
}:
let
  cfg = config.services.moxpaper;
  inherit (lib) types;
in
{
  imports = [ ./stylix.nix ];

  options.services.moxpaper = {
    enable = lib.mkEnableOption "moxpaper";
    package = lib.mkPackageOption pkgs "moxpaper" { };
    settings = lib.mkOption {
      type =
        let
          valueType = types.nullOr (
            types.oneOf [
              types.bool
              types.int
              types.float
              types.str
              types.path
              (types.attrsOf valueType)
              (types.listOf valueType)
            ]
          );
        in
        valueType;
      default = { };
      description = ''
        moxpaper configuration in Nix format that will be converted to Lua.
      '';
    };
    transitions = lib.mkOption {
      type = types.attrsOf types.str;
      default = { };
      description = ''
        Custom transition functions for moxpaper.
        Each attribute name will be the function name, and the value should be the function body.
      '';
      example = lib.literalExpression ''
        {
          spiral = '''
            function(params)
              local progress = params.progress
              local time_factor = params.time_factor
              local rand = params.rand
              local angle = time_factor * math.pi * 4.0
              local distance = (1.0 - progress) * 0.5
              local center_x = 0.5 + distance * math.cos(angle)
              local center_y = 0.5 + distance * math.sin(angle)
              local size = progress
              return {
                transforms = {
                  translate = { center_x - size * 0.5, center_y - size * 0.5 },
                  scale_x = size,
                  scale_y = size
                },
                radius = 0.5 * (1.0 - time_factor),
                rotation = progress * 360,
              }
            end
          ''';
        }
      '';
    };
  };
  config = lib.mkIf cfg.enable {
    home.packages = [ cfg.package ];
    xdg.configFile = {
      "mox/moxpaper/config.lua" = lib.mkIf (cfg.settings != { } || cfg.transitions != { }) {
        text = ''
          -- Generated by Home Manager
          ${lib.optionalString (cfg.transitions != { }) "transitions = {}\n"}
          ${lib.concatStrings (
            lib.mapAttrsToList (name: body: ''
              transitions.${name} = ${body}
            '') cfg.transitions
          )}
          ${lib.optionalString (cfg.settings != { }) "return ${lib.generators.toLua { } cfg.settings}"}
        '';
      };
      "systemd/user/moxpaper.service".source = "${cfg.package}/share/systemd/user/moxpaper.service";
    };
  };
}
